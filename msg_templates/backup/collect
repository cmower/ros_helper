#!/usr/bin/env python
import xml.etree.cElementTree as et
import xml.dom.minidom

import actionlib_msgs.msg as actionlib
import diagnostic_msgs.msg as diagnostic
import geometry_msgs.msg as geometry
import nav_msgs.msg as nav
import sensor_msgs.msg as sensor
import std_msgs.msg as std
import visualization_msgs.msg as visualization

all_msg_grps = ['actionlib',\
                'diagnostic',\
                'geometry',\
                'nav',\
                'sensor',\
                'std',\
                'visualization']

def is_msg_class(x):
    return x[0].isupper()

def get_all_msg_classes(grp):
    return [attr for attr in dir(eval(grp)) if is_msg_class(attr)]

def is_msg_cls_attr(msg_cls_instance, attr):
    return not attr.startswith('_') and not attr.isupper() and not callable(getattr(msg_cls_instance, attr))

def get_all_msg_class_attributes(grp, msg_cls):
    msg_cls_instance = eval("%s.%s()" % (grp, msg_cls))
    for attr in dir(msg_cls_instance):
        if is_msg_cls_attr(msg_cls_instance, attr): yield attr

def get_msg_attr_type(grp, msg_cls, attr):
    return type(eval('%s.%s().%s' % (grp, msg_cls, attr))).__name__

def save_xml(grp, eltree):
    with open(grp + '.xml', 'w') as f: f.write(xml.dom.minidom.parseString(et.tostring(eltree, 'utf-8')).toprettyxml(indent="    ").encode('utf8'))

def get_msg_attr_type_group(attr_type):
    for grp in all_msg_grps:
        if attr_type in get_all_msg_classes(grp): return grp
    return 'basic'

"""

e.g.

<geometry>

  <Point>
    <x type="float"/>
    <y type="float"/>
    <z type="float"/>
  </Point>

  <Pose>
    ...
  </Pose>

</geometry>

<visualization>

  <Marker>
    <pose type="Pose" type_group="geometry"/>
    ...
  </Marker>

</visualization>

"""

if __name__=='__main__':

    for grp in all_msg_grps:

        grp_el = et.Element(grp)

        for msg_cls in get_all_msg_classes(grp):

            msg_cls_el = et.SubElement(grp_el, msg_cls, group=grp)

            for msg_attr in get_all_msg_class_attributes(grp, msg_cls):

                attr_type = get_msg_attr_type(grp, msg_cls, msg_attr)
                et.SubElement(msg_cls_el, msg_attr, type=attr_type, type_group=get_msg_attr_type_group(attr_type))

        save_xml(grp, grp_el)
