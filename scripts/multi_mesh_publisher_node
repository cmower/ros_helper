#!/usr/bin/env python
import rospy
import ros_helper.msgs_api.visualization as vis

class MultiMeshPublisher(object):

	def __init__(self, topic_name, msg):
		self.pub = rospy.Publisher(topic_name, vis.MarkerArray, queue_size=1)
		self.msg = msg

	def update(self, event):
		for m in self.msg.markers: m.add_time(rospy.Time.now())
		self.pub.publish(msg)

if __name__=='__main__':

	# REMOVE WHEN FINISHED
	import sys
	print "[ERROR] implementation for multi_mesh_publisher_node is not finished, quitting..."
	sys.exit(0)

	# Init node 
	rospy.init_node('multi_mesh_publisher_node')

	# Grab parameters

	if rospy.has_param('~hz'):
		hz = rospy.get_param('~hz')
	else:
		hz = 50.0
	
	# Init timer and spin
	rospy.Timer(rospy.Duration(1.0/hz), MultiMeshPublisher().update)
	rospy.spin()